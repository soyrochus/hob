# pytest.ini
[pytest]
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function


; Understanding Fixture Loop Scopes:

; function: A new event loop is created for each test function. This ensures complete isolation between tests but may introduce overhead due to frequent loop creation and destruction.
; class: A single event loop is shared among all test methods within a test class. This reduces the overhead compared to the "function" scope while maintaining some level of isolation.
; module: One event loop is used for all tests within a single test module. This further reduces overhead but decreases isolation between tests.
; package: An event loop is shared across all test modules within a package. This scope is less common and offers minimal isolation.
; session: A single event loop is used for the entire test session, meaning all tests share the same loop. This minimizes overhead but provides the least isolation, which could lead to unintended interactions between tests.